{"version":3,"sources":["app.js","aurelia-api-test.js","authConfig.js","dreamfactory-api.js","dreamfactoryconfig.js","dreamfactorytestconnection.js","environment.js","main.js","utils.js","welcome.js","resources/index.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","Login","of","authService","api","username","gotdata","login","credentials","then","response","console","log","catch","activate","find","customers","authenticated","endpoint","loginUrl","configureEndpoints","accessTokenProp","accessTokenName","loginRedirect","httpClient","configure","useStandardConfiguration","DreamFactoryApi","http","fetch","loginurl","method","body","json","data","hasOwnProperty","setToken","tokenKey","session_token","getdata","token","getToken","dataurl","headers","Headers","APP_API_KEY","INSTANCE_URL","email","password","db","service","serviceObject","overrideMethod","database","DreamFactoryTestConnection","dfapi","session_id","resource","length","debug","testing","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","registerEndpoint","baseConfig","developmentLogging","start","setRoot","Utils","key","value","sessionStorage","setItem","getItem","removeToken","$","logout","success","removeItem","parseResponse","messageBox","code","message","error","Welcome","heading","firstName","lastName","previousValue","fullName","submit","alert","canDeactivate","confirm","UpperValueConverter","toView","toUpperCase"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    config.title = 'Aurelia';\n    config.map([\n      { route: ['', 'welcome'], name: 'welcome',      moduleId: 'welcome',      nav: true, title: 'Welcome' },\n      { route: 'aurelia-api-test', name: 'aurelia-api-test', moduleId: 'aurelia-api-test', nav: true, title: 'Api Connection' },\n      { route: 'dreamfactorytestconnection', name: 'dreamfactorytestconnection', moduleId: 'dreamfactorytestconnection', nav: true, title: 'Test DreamFactory Connection' }\n      ]);\n    this.router = router;\n  }\n}\n","import {AuthService} from 'aurelia-authentication';\nimport {Endpoint} from 'aurelia-api';\nimport {inject, computedFrom} from 'aurelia-framework';\nimport dfconfig from './dreamfactoryconfig';\n\n@inject(AuthService,Endpoint.of('api'))\nexport class Login {\n  constructor(authService,api) {\n    this.api = api;\n    this.authService = authService;\n    this.username = null;\n    this.gotdata = null;\n    this.api = api;\n    this.authService.login(dfconfig.credentials())\n      .then(response => {\n        this.username = response.name;\n        console.log(\"success logged \" + response);\n      })\n      .catch(err => {\n        console.log(\"login failure\");\n      });\n  };\n\n\n  // make a getter to get the authentication status.\n  // use computedFrom to avoid dirty checking\n  @computedFrom('authService.authenticated')\n  get authenticated() {\n    return this.authService.authenticated;\n  }\n\n\nactivate(){\n  return this.api.find('customers')\n    .then(customers => this.gotdata = customers);\n}\n}\n","export default {\n  endpoint: 'auth',\n  loginUrl:'',\n  configureEndpoints: ['auth', 'api'],\n  accessTokenProp: 'session_token',\n  accessTokenName:'token',\n  loginRedirect : ''\n};\n","import {HttpClient, json} from 'aurelia-fetch-client';\nimport {inject} from 'aurelia-framework';\nimport {Utils} from './utils';\nimport  dreamfactoryconfig from './dreamfactoryconfig'\n\n\nlet httpClient = new HttpClient();\nhttpClient.configure(config => {\n  config\n    .useStandardConfiguration()\n});\n\n@inject(HttpClient)\nexport class DreamFactoryApi {\n  constructor(http) {\n    this.http = http;\n  }\n\n  login() {\n    return this.http.fetch(dreamfactoryconfig.loginurl(), {\n      method: \"POST\",\n      body: json(dreamfactoryconfig.credentials())\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.hasOwnProperty('session_token')) {\n          Utils.setToken(dreamfactoryconfig.tokenKey, data.session_token);\n          return data\n        }\n      });\n  }\n\n\n  getdata() {\n    let token = Utils.getToken(dreamfactoryconfig.tokenKey);\n\n    return this.http.fetch(dreamfactoryconfig.dataurl(), {\n      method: \"POST\",\n      headers: new Headers({\n        \"X-DreamFactory-API-Key\": dreamfactoryconfig.APP_API_KEY,\n        \"X-DreamFactory-Session-Token\": token\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n  }\n}\n\n// login() {\n//   return this.http.fetch(dreamfactoryconfig.loginurl(), {\n//     method: \"POST\",\n//     body: json(dreamfactoryconfig.credentials())\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       if (data.hasOwnProperty('session_token')) {\n//         Utils.setToken(dreamfactoryconfig.tokenKey, data.session_token);\n//         return true\n//       } else {\n//         return false\n//       }\n//     });\n// }\n","export default {\n  //--------------------------------------------------------------------------\n//  DreamFactory 2.0 instance specific constants\n//--------------------------------------------------------------------------\n  INSTANCE_URL:'https://api.ageektech.com',\n  APP_API_KEY: 'e36139937010dae37c94ffee331f2acae9989a9a04211bc5025f3a1d5d7d2e36',\n  email:'test@ageektech.com',\n  password: 'test12345',\n  api: '/api/v2/',\n  db:'northwind/',\n  service:'_table/',\n  serviceObject:'customers',\n  tokenKey: 'token',\n  overrideMethod:'?method=GET',\n  dataurl: function () {\n  return this.INSTANCE_URL + this.api + this.db + this.service + this.serviceObject + this.overrideMethod;\n},\n  database: function () {\n    return this.INSTANCE_URL + this.api + this.db + this.service;\n  },\n  loginurl: function () {\n    return this.INSTANCE_URL + '/api/v2/user/session'\n  },\n  credentials: function () {\n    return {email:this.email, password:this.password}\n  }\n};\n","import {inject} from 'aurelia-framework'\nimport {DreamFactoryApi} from './dreamfactory-api'\n\n@inject(DreamFactoryApi)\nexport class DreamFactoryTestConnection {\n  constructor(dfapi) {\n    this.dfapi = dfapi;\n    this.username = null;\n    this.gotdata = null;\n\n    this.dfapi.login().then(response => {\n      if (response.session_id) {\n        this.username = response.name;\n\n        this.dfapi.getdata().then(response => {\n          if (response.resource.length > 0) {\n            this.gotdata = true\n          }\n        })\n      }\n    })\n  }\n\n}\n// load(){\n//   this.dfapi.login().then(response => {\n//     this.username = response.name\n//     if (this.username){\n//       this.dfapi.getdata().then(response => {\n//         this.customers = response.resource\n//       })\n//     }\n//   })\n// }\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport dfconfig from './dreamfactoryconfig'\nimport authConfig from './authConfig';\nimport {AuthService} from 'aurelia-authentication';\n\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-api', config => {\n      config.registerEndpoint('auth',dfconfig.loginurl() )\n      config.registerEndpoint('api',dfconfig.database(),{headers: { \"X-DreamFactory-API-Key\": dfconfig.APP_API_KEY}});\n    })\n.plugin('aurelia-authentication', baseConfig => {\n    baseConfig.configure(authConfig);\n  });\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","//--------------------------------------------------------------------------\r\n//  Misc functions\r\n//--------------------------------------------------------------------------\r\nexport class Utils {\r\n\r\n  static setToken(key, value) {\r\n    sessionStorage.setItem(key, value);\r\n  }\r\n\r\n  static getToken(key) {\r\n    return sessionStorage.getItem(key);\r\n  }\r\n  removeToken(key) {\r\n    $.api.logout(function (data) {\r\n      if (data.success) {\r\n        sessionStorage.removeItem(key);\r\n        // $.route('index');\r\n      }\r\n      else {\r\n        let response = parseResponse(data);\r\n        messageBox(response.code, response.message, response.error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","//import {computedFrom} from 'aurelia-framework';\r\n\r\nexport class Welcome {\r\n  heading = 'Welcome to the Aurelia Navigation App!';\r\n  firstName = 'John';\r\n  lastName = 'Doe';\r\n  previousValue = this.fullName;\r\n\r\n  //Getters can't be directly observed, so they must be dirty checked.\r\n  //However, if you tell Aurelia the dependencies, it no longer needs to dirty check the property.\r\n  //To optimize by declaring the properties that this getter is computed from, uncomment the line below\r\n  //as well as the corresponding import above.\r\n  //@computedFrom('firstName', 'lastName')\r\n  get fullName() {\r\n    return `${this.firstName} ${this.lastName}`;\r\n  }\r\n\r\n  submit() {\r\n    this.previousValue = this.fullName;\r\n    alert(`Welcome, ${this.fullName}!`);\r\n  }\r\n\r\n  canDeactivate() {\r\n    if (this.fullName !== this.previousValue) {\r\n      return confirm('Are you sure you want to leave?');\r\n    }\r\n  }\r\n}\r\n\r\nexport class UpperValueConverter {\r\n  toView(value) {\r\n    return value && value.toUpperCase();\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}